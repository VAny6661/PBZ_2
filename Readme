Лабораторная работа №2 Коктышев И.Д.
Вариант 11. «Учет приказов и распоряжений»

Предприятие, имеющее в своей структуре ряд иерархически подчиняющихся подразделений. 
Словесное описание предметной области: Необходимо хранить информацию о внутренних приказах, распоряжениях или других подобных документах, сроках их выполнения и исполнителях. Например: название документа - "Указание о введении в действие плана по совершенствованию охраны труда", мероприятие, описываемое в документе – "Установить порядок выпуска приказов по случаю нарушения охраны труда", - исходящий корреспондент (человек, готовивший приказ) – гл. инженер.
Информация о исходящем корреспонденте: название подразделения, должность корреспондента, ФИО. Приказ, распоряжение характеризуются номером, датой, содержанием, мероприятием, ответственным за выполнение (название подразделения, должность, ФИО), датой выполнения мероприятия, пометкой о выполнении мероприятия. В одном документе может быть перечислено несколько мероприятий. Фиксируется дата выхода документа. Распоряжение подписывает сотрудник ранга руководителя предприятия, необходимо фиксировать должность и ФИО.

Необходимо реализовать выполнения следующих функций:
-	Добавление/редактирование/удаление информации о внутренних приказах, распоряжениях или других подобных документах.
-	Добавление/редактирование/удаление информации о корреспондентам.
-	Просмотр списка исходящих корреспондентов, мероприятия по которым на заданную дату не были выполнены – текущая дата, дата выхода документа, название мероприятия, дата выполнения, ФИО, должность, название подразделения ответственного.
-	Просмотр списка мероприятий за заданный период – дата начала периода, дата окончания периода, название мероприятия, выполнено или нет;
-	Просмотр списка всех зафиксированных документов заданного типа (например, приказов) на текущую дату, отсортированных по дате документа – название предприятия, текущая дата, название вида документа, список документов – номер, дата документа, пометка о выполнении.

лабораторная работа была сделана при помощи MySQL и Ruby on Rails. Также был использован гем Active admin.
Ник для входа admin@example.com
Пароль: password
Генерация SQL запросов происходит автоматически при помощи ORM Active Record. 
При создании проекта были изменены следующие файлы config/database.yml в нём указывются данные для входа в MySQL. Все файлы в папке db/migrate/ в них указываются поля таблиц.
Gemfile в нём указываются гемы. Все файлы в папке app/admin в них указывются как поля будут отображаться в программе.
Для создания программы были прописаны следующие команды в терминале rubyMine: bundle update, rails generate active_admin:install - для устанвки active_admin.
rails generate scaffold и название каждой модели (documents, responsibles, events). 
Она создаёт для каждой модели 8 файлов view, 1 файл model, 1 файл migrate, 1 файл controller. Затем в файлах миграции прописываются поля наших таблиц. 
rake db:migrate - для миграции таблиц.
Затем прописываем rails generate active_admin:resource название наших моделей, что сгенерирует файлы в папке app/admin.
Каждый такой файл отвечает за генерацию отдельного окна в приложении и его отображение. 
В нём permit_params указывает на столбцы, что могут изменяться в данной таблице.
form отвечает за отображение страницы, когда мы нажимаем Edit
Show отвечат за основное отображение страницы.
index отвечает за отображение конкретных столбцов таблиц.
В папке examples находятся примеры запросов, которые сервер посылает СУБД для выполнения команд
